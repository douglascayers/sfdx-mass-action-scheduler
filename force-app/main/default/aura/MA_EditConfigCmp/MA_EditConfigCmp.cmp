<!--
Author: Doug Ayers
Website: https://douglascayers.com
GitHub: https://github.com/sfdx-mass-action-scheduler/sfdx-mass-action-scheduler
License: BSD 3-Clause License
-->
<aura:component controller="MA_EditConfigCmpController" implements="flexipage:availableForRecordHome,force:hasRecordId,lightning:actionOverride" access="global">

    <aura:attribute name="didInitConfig"
                    type="Boolean"
                    description="Track if onInit has loaded the configuration record yet."
                    default="false"/>

    <aura:attribute name="objectDescribe"
                    type="Object"
                    description="SObject and Field describe info"/>

    <aura:attribute name="recordId"
                    type="String"
                    description="The ID of the record to be displayed. Provided by force:hasRecordId interface."/>

    <aura:attribute name="record"
                    type="Object"
                    description="The record object to be displayed. This is a wrapper object and not the sobject."/>

    <aura:attribute name="spinnerTimerIds"
                    type="String[]"
                    description="To minimize flickering of the spinner, delay hiding spinner when another async action starts."/>

    <c:LC_API aura:id="lc_api"/>
    <c:LC_URL aura:id="lc_url"/>

    <aura:attribute name="urlInfo"
                    type="Map"
                    description="Info from LC_URL component."/>

    <!-- Lightning Data Service -->

    <!--
        This allows us to know when the record is changed outside this component,
        such as when the user might click the standard 'Edit' button and save the record.
        If we don't reload this component then upon saving the record via the component
        we could overwrite, undoing, the outside changes.
     -->

    <aura:attribute name="ldsComplexRecord"
                    type="Object"
                    description="The complex record. Used only with Lightning Data Service to detect when record changes outside this component."/>

    <aura:attribute name="ldsSimpleRecord"
                    type="Mass_Action_Configuration__c"
                    description="The simple record. Used only with Lightning Data Service to detect when record changes outside this component."/>

    <force:recordData aura:id="lds"
        recordId="{!v.recordId}"
        fields="Id"
        mode="EDIT"
        targetRecord="{!v.ldsComplexRecord}"
        targetFields="{!v.ldsSimpleRecord}"
        recordUpdated="{!c.onInit}"/>

    <!-- Wizard Attributes -->

    <aura:attribute name="wizardActiveStageIndex"
                    type="Integer"
                    description="In the Wizard, which stage is user actively on."
                    default="0"/>

    <aura:attribute name="wizardStageNames"
                    type="String[]"
                    description="In the Wizard, the names of the stages."
                    default="[ 'Details', 'Choose Source', 'Choose Action', 'Field Mappings', 'Schedule' ]"/>

    <!-- Source Attributes -->

    <aura:attribute name="sourceType"
                    type="String"
                    description="For tracking changes to source type. If bind to property of sobject then change handler is called when any field on record changes."/>

    <aura:attribute name="sourceTypeURL"
                    type="String"
                    description="URL to the selected report or list view so user can verify their selection."/>

    <aura:attribute name="sourceFields"
                    type="Map[]"
                    description="During field mapping stage, these are the assignable source fields."/>

    <aura:attribute name="sourceFieldsInputType"
                    type="String"
                    default="text"
                    description="Input field variant for user to specify source field mappings. Options: TEXT, COMBOBOX"/>

    <!-- Source Type : Reports -->

    <aura:attribute name="sourceReportFolders"
                    type="Map[]"
                    description="Folder select options to narrow down search of a report. User must choose one to drive report filtering."/>

    <aura:attribute name="sourceReportFolderId"
                    type="String"
                    description="Selected report folder id."/>

    <aura:attribute name="sourceReports"
                    type="Map[]"
                    description="Report select options within the currently selected report."/>

    <aura:attribute name="sourceReportId"
                    type="String"
                    description="Selected report id."/>

    <aura:attribute name="sourceReport"
                    type="Object"
                    description="Details about the selected report, like name and folder."/>

    <aura:attribute name="sourceReportColumns"
                    type="Map[]"
                    description="Column select options from the selected source report. User must choose one to drive sorting and pagination."/>

    <aura:attribute name="sourceReportColumnName"
                    type="String"
                    description="Selected report column."/>

    <!-- Source Type : List Views -->

    <aura:attribute name="sourceListViewSobjectTypes"
                    type="Map[]"
                    description="SObject select options to narrow down search of a list view. User must choose one to drive list view filtering."/>

    <aura:attribute name="sourceListViewSobjectType"
                    type="String"
                    description="Selected list view sobject type."/>

    <aura:attribute name="sourceListViews"
                    type="Map[]"
                    description="List View select options within the currently selected sobject."/>

    <aura:attribute name="sourceListViewId"
                    type="String"
                    description="Selected list view id."/>

    <aura:attribute name="sourceListView"
                    type="Object"
                    description="Details about the selected list view, like name and sobject type."/>

    <!-- Target Attributes -->

    <aura:attribute name="targetType"
                    type="String"
                    description="For tracking changes to target type. If bind to property of sobject then change handler is called when any field on record changes."/>

    <aura:attribute name="targetTypeRequiresSobject"
                    type="Boolean"
                    description="Indicates if selected target type requires user to select a specific object to know available actions. For example, Apex does not but Email Alerts do."/>

    <aura:attribute name="targetTypeRequiresAction"
                    type="Boolean"
                    description="Indicates if selected target type requires user to select a specific action to invoke. For example, Workflows do not but Quick Actions do."/>

    <aura:attribute name="targetSobjectTypes"
                    type="Map[]"
                    description="Object name select options of objects that have custom actions (e.g. objects with custom Email Alerts or Quick Actions)."/>

    <aura:attribute name="targetSobjectType"
                    type="String"
                    description="Selected sobject type."/>

    <aura:attribute name="targetApexTypes"
                    type="Map[]"
                    default="[
                        {
                            'label': 'Invocable Method',
                            'value': 'Invocable'
                        },
                        {
                            'label': 'Anonymous Block',
                            'value': 'Anonymous'
                        }
                    ]"
                    description="Apex Type select options."/>

    <aura:attribute name="targetApexType"
                    type="String"
                    description="Selected apex type."/>

    <aura:attribute name="isValidToRenderTargetInvocableActions"
                    type="Boolean"
                    description="Indicates conditions are met to fetch and show the target invocable action select options."/>

    <aura:attribute name="targetNamedCredentials"
                    type="Map[]"
                    description="SObject select options of Named Credentials to choose for making API callout to REST API to execute target action."/>

    <aura:attribute name="targetInvocableActions"
                    type="Map[]"
                    description="Action select options within the currently selected target type and target sobject."/>

    <aura:attribute name="targetInvocableAction"
                    type="String"
                    description="The selected action name from the target invocable actions select options."/>

    <aura:attribute name="targetFields"
                    type="Map[]"
                    description="During field mapping stage, these are the assignable target fields."/>

    <aura:attribute name="targetFieldMappings"
                    type="Map[]"
                    description="Array of input arguments for target action to map source fields to."/>

    <!-- Schedule Option Attributes -->

    <aura:attribute name="scheduleOptionsHourOfDay"
                    type="Map[]"
                    description="Hour of Day in Cron schedule expression."/>

    <aura:attribute name="scheduleOptionsDayOfMonth"
                    type="Map[]"
                    description="Day of Month in Cron schedule expression."/>

    <aura:attribute name="scheduleOptionsDayOfWeek"
                    type="Map[]"
                    description="Weekday in Cron schedule expression."/>

    <aura:attribute name="scheduleOptionsMonthOfYear"
                    type="Map[]"
                    description="Month of Year in Cron schedule expression."/>

    <!-- Schedule Selection Attributes -->

    <aura:attribute name="scheduleSelectionsFrequency"
                    type="String"
                    description="The selected values from the radioGroup. ODDITY: The type of this attribute must be String for initial value to be selected by lightning:radioGroup; but note that if user makes a selection then an array is bound to this attribute."/>

    <aura:attribute name="scheduleSelectionsHourOfDay"
                    type="String[]"
                    description="The selected values from the checkboxGroup. When save record need to convert list to csv string."/>

    <aura:attribute name="scheduleSelectionsDayOfMonth"
                    type="String[]"
                    description="The selected values from the dual listbox. When save record need to convert list to csv string."/>

    <aura:attribute name="scheduleSelectionsDayOfWeek"
                    type="String[]"
                    description="The selected values from the checkboxGroup. When save record need to convert list to csv string."/>

    <aura:attribute name="scheduleSelectionsMonthOfYear"
                    type="String[]"
                    description="The selected values from the checkboxGroup. When save record need to convert list to csv string."/>

    <!-- Events -->

    <aura:handler name="init" value="{!this}" action="{!c.onInit}"/>

    <aura:handler name="change" value="{!v.sourceType}" action="{!c.handleSourceTypeChange}"/>
    <aura:handler name="change" value="{!v.targetType}" action="{!c.handleTargetTypeChange}"/>

    <aura:handler name="change" value="{!v.sourceReportFolderId}" action="{!c.handleSourceReportFolderChange}"/>
    <aura:handler name="change" value="{!v.sourceReportId}" action="{!c.handleSourceReportChange}"/>

    <aura:handler name="change" value="{!v.sourceListViewSobjectType}" action="{!c.handleSourceListViewSobjectTypeChange}"/>
    <aura:handler name="change" value="{!v.sourceListViewId}" action="{!c.handleSourceListViewChange}"/>

    <aura:handler name="change" value="{!v.targetTypeRequiresSobject}" action="{!c.handleTargetTypeRequiresSobjectChange}"/>
    <aura:handler name="change" value="{!v.targetSobjectType}" action="{!c.handleTargetSobjectTypeChange}"/>

    <aura:handler name="change" value="{!v.targetApexType}" action="{!c.handleTargetApexTypeChange}"/>

    <!-- Markup -->

    <div class="slds-theme_default slds-box slds-box_xx-small">

        <lightning:spinner aura:id="spinner" variant="brand"/>

        <div class="slds-grid slds-var-p-around_medium">
            <div class="slds-col">

                <c:strike_wizard aura:id="wizard"
                    stageNames="{!v.wizardStageNames}"
                    activeChevron="{!v.wizardActiveStageIndex}"
                    displayMode="wizard"
                    collapseExpandButton="true"
                    toggleBodyView="false"
                    disableForwardNavOnIncomplete="true"
                    processComplete="false">

                    <div class="slds-box">

                            <!-- Stage: Details -->

                            <aura:if isTrue="{!equals( v.wizardActiveStageIndex, 0 )}">

                                <c:MA_WizardCoachingCmp>

                                    <aura:set attribute="leftTitle" value="About This Step"/>
                                    <aura:set attribute="leftContent">
                                        <p>
                                            Describe the purpose of this Mass Action Configuration.
                                            Your future self and those that come after you will appreciate it.
                                        </p>
                                        <p>
                                            Pro Tip: After you've saved this record, use the <a href="https://github.com/sfdx-mass-action-scheduler/sfdx-mass-action-scheduler/wiki/How-to-Customize-the-Quick-Edit-Page-Layout" target="_blank" rel="noopener noreferrer">Quick Edit</a> button to edit details
                                            without needing to step through the entire wizard each time.
                                        </p>
                                        <p>
                                            Each step of this wizard includes tips and advice.
                                            You can also find more documentation, examples, and support at these resources:
                                        </p>
                                        <p>
                                            <ul>
                                                <li>For discussion and feedback <a href="https://success.salesforce.com/_ui/core/chatter/groups/GroupProfilePage?g=0F93A000000LhvN" target="_blank" rel="noopener noreferrer">post in the community group</a> or raise well defined issues and ideas via the <a href="https://github.com/sfdx-mass-action-scheduler/sfdx-mass-action-scheduler/issues" target="_blank" rel="noopener noreferrer">Issues feature</a>.</li>
                                                <li>Read the <a href="https://github.com/sfdx-mass-action-scheduler/sfdx-mass-action-scheduler/wiki" target="_blank" rel="noopener noreferrer">wiki page</a> for further documentation on Mass Action Scheduler.</li>
                                                <li>Read the <a href="https://github.com/sfdx-mass-action-scheduler/sfdx-mass-action-scheduler/wiki/Frequently-Asked-Questions" target="_blank" rel="noopener noreferrer">FAQ page</a> to help troubleshoot technical issues.</li>
                                            </ul>
                                        </p>
                                    </aura:set>

                                    <aura:set attribute="rightTitle" value="Guidance"/>
                                    <aura:set attribute="rightContent">
                                        <p>
                                            <b>Active</b> configurations can be run manually or on a schedule.
                                        </p>
                                        <p>
                                            <b>Inactive</b> configurations do not run.
                                            If a configuration is scheduled, it's Apex job is unscheduled for future runs until you re-activate it again.
                                        </p>
                                        <p>
                                            <b>Batch Size</b> controls the number of times the target action from the Choose Action step is invoked per save transaction.
                                            As when using Data Loader, you may need to reduce the batch size to stay within <a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_gov_limits.htm" target="_blank" rel="noopener noreferrer">governor limits</a>.
                                        </p>
                                        <p>
                                            <b>Named Credential</b> is optional and is a way to <a href="https://github.com/sfdx-mass-action-scheduler/sfdx-mass-action-scheduler/wiki/Specify-the-Running-User-via-Named-Credentials" target="_blank" rel="noopener noreferrer">specify the running user</a> performing the actions.
                                            That is to say the user who has their name stamped as the "Last Modified By" on any updated records
                                            by the target action from the Choose Action step.
                                            If not specified, then the user who last activates the configuration, or who manually runs it, is the running user.
                                        </p>
                                    </aura:set>

                                </c:MA_WizardCoachingCmp>

                            </aura:if>

                            <!-- Stage: Choose Source -->

                            <aura:if isTrue="{!equals( v.wizardActiveStageIndex, 1 )}">

                                <c:MA_WizardCoachingCmp>

                                    <aura:set attribute="leftTitle" value="About This Step"/>
                                    <aura:set attribute="leftContent">
                                        <p>
                                            Select the source of the records you want to process.
                                        </p>
                                        <p>
                                            <b>List Views</b> are easy to create and support simple filter criteria.
                                            Learn how to create list views with the <a href="https://trailhead.salesforce.com/content/learn/modules/lex_customization/lex_customization_list?trail_id=lex_admin_implementation" target="_blank" rel="noopener noreferrer">Create and Customize List Views</a> unit on Trailhead.
                                        </p>
                                        <p>
                                            <b>Reports</b> are powerful and support complex filter criteria
                                            like <a href="https://help.salesforce.com/articleView?id=reports_cross_filters_create.htm" target="_blank" rel="noopener noreferrer">Cross Filters</a>.
                                            Learn how to create reports with the <a href="https://trailhead.salesforce.com/content/learn/modules/lex_implementation_reports_dashboards?trail_id=lex_admin_implementation" target="_blank" rel="noopener noreferrer">Reports &amp; Dashboards for Lightning Experience</a> module on Trailhead.
                                        </p>
                                        <p>
                                            <b>SOQL</b> queries are an advanced technique to search for specific records. Simple queries can be helpful when you don't want to deal with the overhead of creating a list view or a report.
                                            Learn how to write SOQL queries with the <a href="https://trailhead.salesforce.com/en/content/learn/modules/apex_database/apex_database_soql?trail_id=force_com_dev_beginner" target="_blank" rel="noopener noreferrer">Write SOQL Queries</a> unit on Trailhead.
                                        </p>
                                        <p>
                                            <b>Apex</b> classes that implement <code class="keyword">Iterable&lt;Map&lt;String, Object&gt;&gt;</code> are an advanced technique that give you full control over what the source data is.
                                            For example, if you need to make multiple SOQL queries, apply complex data filtering, or retrieve data from an external web service with http callouts.
                                            Learn how to develop custom iterators with the <a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_iterable.htm" target="_blank" rel="noopener noreferrer">Apex Developer Guide</a>.
                                        </p>
                                    </aura:set>

                                    <aura:set attribute="rightTitle" value="Guidance"/>
                                    <aura:set attribute="rightContent">

                                        <p>
                                            <p>
                                                <b>Stay within limits</b>. If your source type would return more than its record limit then either modify filters to reduce the row count or use a different source type.
                                                For example, a report that returns 30 thousand records would need to be split into three smaller reports or switch to another source type.
                                            </p>
                                            <table class="slds-table slds-table_cell-buffer slds-table_bordered slds-table_col-bordered">
                                                <thead>
                                                    <tr class="slds-line-height_reset">
                                                        <th class="slds-text-title_caps slds-nowrap">Source Type</th>
                                                        <th class="slds-text-title_caps slds-cell-wrap">Limits</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr>
                                                        <td class="slds-nowrap"><b>List Views</b></td>
                                                        <td class="slds-cell-wrap">Up to 50 million records.</td>
                                                    </tr>
                                                    <tr>
                                                        <td class="slds-nowrap"><b>Reports</b></td>
                                                        <td class="slds-cell-wrap">
                                                            Up to 10 thousand records.
                                                            <br/>
                                                            <a href="https://help.salesforce.com/articleView?id=reports_changing_format.htm" target="_blank" rel="noopener noreferrer">Tabular report format</a> only.
                                                            <br/>
                                                            Report must be saved in a <a href="https://trailhead.salesforce.com/content/learn/projects/create-reports-and-dashboards-for-sales-and-marketing-managers?trail_id=learn-admin-essentials" target="_blank" rel="noopener noreferrer">custom folder</a>.
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="slds-nowrap"><b>SOQL</b></td>
                                                        <td class="slds-cell-wrap">Up to 50 million records.</td>
                                                    </tr>
                                                    <tr>
                                                        <td class="slds-nowrap"><b>Apex</b></td>
                                                        <td class="slds-cell-wrap">
                                                            Up to 50 million records.
                                                            <br/>
                                                            Class must implement <code class="keyword">Iterable&lt;Map&lt;String, Object&gt;&gt;</code> and provide a no-argument constructor.
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </p>

                                        <p>
                                            <b>Alias SOQL aggregate functions</b>. Aggregate functions like <code class="keyword">COUNT</code>, <code class="keyword">MIN</code>, <code class="keyword">MAX</code>, <code class="keyword">AVG</code>, <code class="keyword">SUM</code> and others
                                            must be <a href="https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql_select_groupby_alias.htm" target="_blank" rel="noopener noreferrer">aliased</a> to be selectable in the Field Mappings step.
                                            For example, consider the query <code class="keyword">SELECT COUNT(Id) <b>RecordCount</b>, Type FROM Account GROUP BY Type</code>.
                                            Without the <b>RecordCount</b> alias then only the <b>Type</b> field would be available on the Field Mappings step.
                                        </p>

                                        <p>
                                            <b>Test your data source before automating</b>.
                                            Confirm fields and filters by first previewing list views and running reports.
                                            Execute SOQL queries in a tool like <a href="https://help.salesforce.com/articleView?id=code_dev_console_tab_query_editor.htm" target="_blank" rel="noopener noreferrer">Developer Console</a> or <a href="https://developer.salesforce.com/docs/atlas.en-us.dataLoader.meta/dataLoader/data_loader.htm" target="_blank" rel="noopener noreferrer">Data Loader</a>.
                                        </p>

                                    </aura:set>

                                </c:MA_WizardCoachingCmp>

                            </aura:if>

                            <!-- Stage: Choose Action -->

                            <aura:if isTrue="{!equals( v.wizardActiveStageIndex, 2 )}">

                                <c:MA_WizardCoachingCmp>

                                    <aura:set attribute="leftTitle" value="About This Step"/>
                                    <aura:set attribute="leftContent">
                                        <p>
                                            Select the target action you want to process the source records.
                                        </p>
                                        <p>
                                            Note, Process Builders and Flows are grouped together because the <a href="https://developer.salesforce.com/docs/atlas.en-us.api_action.meta/api_action/actions_obj_flow.htm" target="_blank" rel="noopener noreferrer">REST API</a> does not distinguish between them.
                                            You may like to use a naming convention to help you tell them apart. For example, adding the word "Flow" to the names of your flows (e.g. "My Account Flow").
                                        </p>
                                        <p>
                                            If you don't see the action you want listed, ensure that it is <b>active</b> and is a <b>supported type</b>.
                                        </p>
                                    </aura:set>

                                    <aura:set attribute="rightTitle" value="Guidance"/>
                                    <aura:set attribute="rightContent">
                                        <p>
                                            <table class="slds-table slds-table_cell-buffer slds-table_bordered">
                                                <thead>
                                                    <tr class="slds-line-height_reset">
                                                        <th class="slds-text-title_caps slds-nowrap">Action Type</th>
                                                        <th class="slds-text-title_caps slds-cell-wrap">Supported Types</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr>
                                                        <td class="slds-nowrap"><b>Process Builder</b></td>
                                                        <td class="slds-cell-wrap">Processes that start when <a href="https://help.salesforce.com/articleView?id=process_start.htm" target="_blank" rel="noopener noreferrer">invoked by another process</a>, not when a record is created or updated.</td>
                                                    </tr>
                                                    <tr>
                                                        <td class="slds-nowrap"><b>Flows</b></td>
                                                        <td class="slds-cell-wrap">Autolaunched flows. Flows that <a href="https://help.salesforce.com/articleView?id=flow_concepts_type.htm" target="_blank" rel="noopener noreferrer">don't require user interaction</a> like screens.</td>
                                                    </tr>
                                                    <tr>
                                                        <td class="slds-nowrap"><b>Quick Actions</b></td>
                                                        <td class="slds-cell-wrap">Create a Record, Update a Record, and Log a Call types.</td>
                                                    </tr>
                                                    <tr>
                                                        <td class="slds-nowrap"><b>Email Alerts</b></td>
                                                        <td class="slds-cell-wrap">All</td>
                                                    </tr>
                                                    <tr>
                                                        <td class="slds-nowrap"><b>Workflow Rules</b></td>
                                                        <td class="slds-cell-wrap">Active rules.</td>
                                                    </tr>
                                                    <tr>
                                                        <td class="slds-nowrap"><b>Apex</b></td>
                                                        <td class="slds-cell-wrap">
                                                            <p>
                                                                Classes annotated with <a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_annotation_InvocableMethod.htm" target="_blank" rel="noopener noreferrer">@InvocableMethod</a> or <a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_anonymous_block.htm" target="_blank" rel="noopener noreferrer">anonymous blocks</a>.
                                                            </p>
                                                            <p>
                                                                For anonymous blocks, your script must include the following method definition,
                                                                which will be passed the current batch of source records. Each execution of your script occurs in its own transaction.
                                                                <code class="block">
                                                                    void execute( List&lt;Map&lt;String, Object&gt;&gt; sourceRecordsBatch ) {
                                                                    &nbsp;&nbsp;&nbsp;&nbsp;// your logic here
                                                                    }
                                                                </code>
                                                            </p>
                                                            <p>
                                                                Apex classes and anonymous blocks are invoked once per batch of source records, just like the <code class="keyword">execute</code> method of a <a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_batch_interface.htm" target="_blank" rel="noopener noreferrer">Batchable Class</a> or a <a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_triggers_bulk.htm" target="_blank" rel="noopener noreferrer">Bulk Trigger</a>.
                                                                However, unlike batchable or trigger code, no state is preserved within the script between executions. Though you may choose to manage and preserve state yourself between executions via DML to records or custom settings.
                                                            </p>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </p>
                                    </aura:set>

                                </c:MA_WizardCoachingCmp>

                            </aura:if>

                            <!-- Stage: Field Mappings -->

                            <aura:if isTrue="{!equals( v.wizardActiveStageIndex, 3 )}">

                                <c:MA_WizardCoachingCmp>

                                    <aura:set attribute="leftTitle" value="About This Step"/>
                                    <aura:set attribute="leftContent">
                                        <p>
                                            Map source fields as inputs to the target action.
                                        </p>
                                        <p>
                                            For example, some action types like Process Builder, Workflow Rules, and Email Alerts require a record ID to be mapped to them from the source data.
                                        </p>
                                    </aura:set>

                                    <aura:set attribute="rightTitle" value="Guidance"/>
                                    <aura:set attribute="rightContent">
                                        <p>
                                            <b>Don't see the Source Field you're looking for?</b>
                                            <ul>
                                                <li>Confirm the field is included in your source type.</li>
                                                <li>Ensure that your user has <a href="https://trailhead.salesforce.com/content/learn/modules/data_security?trail_id=security" target="_blank" rel="noopener noreferrer">read object and field permissions</a>.</li>
                                                <li>If using a Named Credential, ensure that user also has appropriate object and field permissions.</li>
                                                <li>
                                                    If using SOQL, alias the aggregate functions. Aggregate functions like <code class="keyword">COUNT</code>, <code class="keyword">MIN</code>, <code class="keyword">MAX</code>, <code class="keyword">AVG</code>, <code class="keyword">SUM</code> and others
                                                    must be <a href="https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql_select_groupby_alias.htm" target="_blank" rel="noopener noreferrer">aliased</a> to be selectable in the Field Mappings step.
                                                    For example, consider the query <code class="keyword">SELECT COUNT(Id) <b>RecordCount</b>, Type FROM Account GROUP BY Type</code>.
                                                    Without the <b>RecordCount</b> alias then only the <b>Type</b> field would be available on the Field Mappings step.
                                                </li>
                                                <li>
                                                    If using SOQL, child relationship queries are not shown in the Field Mappings step.
                                                    For example, consider the query <code class="keyword">SELECT Id, Name, ( SELECT FirstName FROM Contacts ) FROM Account</code>.
                                                    The child relationship query <code class="keyword">SELECT FirstName FROM Contacts</code> is ignored.
                                                    Therefore, and for performance, do not use child relationship queries in your <code class="keyword">SELECT</code> statement.
                                                </li>
                                            </ul>
                                        </p>
                                        <p>
                                            <b>Don't see the Target Field you're looking for?</b>
                                            <ul>
                                                <li>For Flows, ensure the variable's <a href="https://help.salesforce.com/articleView?id=flow_ref_resources_variable.htm" target="_blank" rel="noopener noreferrer">Availability Outside the Flow</a> has <b>Available for input</b> selected.</li>
                                                <li>For Quick Actions, ensure the field is on the <a href="https://help.salesforce.com/articleView?id=action_layout_editor_about.htm" target="_blank" rel="noopener noreferrer">action's layout</a>.</li>
                                                <li>For Invocable Apex, ensure the class variable has the <a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_annotation_InvocableVariable.htm" target="_blank" rel="noopener noreferrer">@InvocableVariable</a> annotation.</li>
                                                <li>For Anonymous Apex, the field mappings step is not used. Instead, your script handles all field mapping and logic within its <code class="keyword">execute</code> method.</li>
                                            </ul>
                                        </p>
                                    </aura:set>

                                </c:MA_WizardCoachingCmp>

                            </aura:if>

                            <!-- Stage: Schedule -->

                            <aura:if isTrue="{!equals( v.wizardActiveStageIndex, 4 )}">

                                <c:MA_WizardCoachingCmp>

                                    <aura:set attribute="leftTitle" value="About This Step"/>
                                    <aura:set attribute="leftContent">
                                        <p>
                                            Choose the schedule frequency when to run this Mass Action Configuration.
                                        </p>
                                        <p>
                                            <b>On Demand</b> runs only when you click the <b>Run</b> button or if you use Process Builder, Flow, or Apex to
                                            invoke the provided <code class="keyword">MA_RunConfigInvocable</code> invocable Apex class (labeled "MAS: Run Mass Action").
                                        </p>
                                        <p>
                                            <b>Scheduled</b> provides simple options to choose the hour, day, month, and year to run the configuration repeatedly.
                                        </p>
                                        <p>
                                            <b>Custom</b> allows you to specify your own cron expression which allows more advanced options than the provided simple scheduler.
                                            Learn more about how to write cron expressions in the "Using the System.Schedule Method" section of the <a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_scheduler.htm" target="_blank" rel="noopener noreferrer">Apex Scheduler</a> documentation.
                                        </p>
                                        <p>
                                            Note, only <b>active</b> configurations will run regardless the schedule frequency chosen.
                                        </p>
                                    </aura:set>

                                    <aura:set attribute="rightTitle" value="Guidance"/>
                                    <aura:set attribute="rightContent">
                                        <p>
                                            Salesforce has a limit on the number of scheduled Apex jobs at one time. Traditionally this is 100 scheduled jobs.
                                            If you encounter an error trying to save an active configuration with a scheduled or custom frequency,
                                            you may have reached the limit and need to either deactivate other configurations or unschedule other Apex jobs in your org.
                                            Learn more about these limits in the "Apex Scheduler Limits" section of the <a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_scheduler.htm" target="_blank" rel="noopener noreferrer">Apex Scheduler</a> documentation.
                                        </p>
                                        <p>
                                            <b>Example cron expressions for custom schedule frequency:</b>
                                                <table class="slds-table slds-table_cell-buffer slds-table_bordered">
                                                    <thead>
                                                        <tr class="slds-line-height_reset">
                                                            <th class="slds-text-title_caps slds-nowrap">Expression</th>
                                                            <th class="slds-text-title_caps slds-cell-wrap">Description</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr>
                                                            <td class="slds-nowrap"><code>0 0 13 * * ?</code></td>
                                                            <td class="slds-cell-wrap">Runs every day at 1 PM.</td>
                                                        </tr>
                                                        <tr>
                                                            <td class="slds-nowrap"><code>0 0 22 ? * 6L</code></td>
                                                            <td class="slds-cell-wrap">Runs the last Friday of every month at 10 PM.</td>
                                                        </tr>
                                                        <tr>
                                                            <td class="slds-nowrap"><code>0 0 10 ? * MON-FRI	</code></td>
                                                            <td class="slds-cell-wrap">Runs Monday through Friday at 10 AM.</td>
                                                        </tr>
                                                        <tr>
                                                            <td class="slds-nowrap"><code>0 0 20 * * ? 2010</code></td>
                                                            <td class="slds-cell-wrap">Runs every day at 8 PM during the year 2010.</td>
                                                        </tr>
                                                        <tr>
                                                            <td class="slds-nowrap"><code>0 0 8 13 2 ?</code></td>
                                                            <td class="slds-cell-wrap">Runs every 13th of February at 8 AM.</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                        </p>
                                    </aura:set>

                                </c:MA_WizardCoachingCmp>

                            </aura:if>

                    </div>

                </c:strike_wizard>

            </div>
        </div>

        <!-- avoid showing form until have data for input labels and values, also avoids errors in debug mode -->
        <aura:if isTrue="{!and( not( empty( v.record ) ), not( empty( v.objectDescribe ) ) )}">

            <!-- Stage: Details -->

            <aura:if isTrue="{!equals( v.wizardActiveStageIndex, 0 )}">

                <div class="slds-grid slds-var-p-horizontal_medium">

                    <div class="slds-col">
                        <c:slds_section title="Detail Information"/>
                    </div>

                </div>

                <div class="slds-grid slds-var-p-horizontal_medium">

                    <div class="slds-col">
                        <div class="slds-form slds-form_stacked">

                            <c:slds_label label="{!v.objectDescribe.fields.Name.label}"
                                          helpText="{!v.objectDescribe.fields.Name.helpText}"/>
                            <lightning:input aura:id="inputName"
                                name="inputName"
                                variant="label-hidden"
                                label="{!v.objectDescribe.fields.Name.label}"
                                value="{!v.record.name}"
                                required="true"
                                type="text"
                                messageWhenValueMissing="Name is required."
                                class="slds-var-p-top_x-small"
                                onblur="{!c.handleInputNameFieldBlur}"/>

                            <c:slds_label label="{!v.objectDescribe.fields.DeveloperName__c.label}"
                                          helpText="{!v.objectDescribe.fields.DeveloperName__c.helpText}"/>
                            <lightning:input aura:id="inputDeveloperName"
                                name="inputDeveloperName"
                                variant="label-hidden"
                                label="{!v.objectDescribe.fields.DeveloperName__c.label}"
                                value="{!v.record.developerName}"
                                required="true"
                                type="text"
                                messageWhenValueMissing="Unique Name is required."
                                class="slds-var-p-top_x-small"/>

                            <c:slds_label label="{!v.objectDescribe.fields.Description__c.label}"
                                          helpText="{!v.objectDescribe.fields.Description__c.helpText}"/>
                            <lightning:textarea aura:id="inputDescription"
                                name="inputDescription"
                                variant="label-hidden"
                                label="{!v.objectDescribe.fields.Description__c.label}"
                                value="{!v.record.description}"
                                required="false"
                                class="slds-var-p-top_x-small"/>

                            <c:slds_label label="{!v.objectDescribe.fields.Active__c.label}"
                                          helpText="{!v.objectDescribe.fields.Active__c.helpText}"/>
                            <lightning:input aura:id="inputActive"
                                name="inputActive"
                                variant="label-hidden"
                                label="{!v.objectDescribe.fields.Active__c.label}"
                                value="{!v.record.active}"
                                checked="{!v.record.active}"
                                required="false"
                                type="checkbox"
                                class="slds-var-p-top_x-small"/>

                            <c:slds_label label="{!v.objectDescribe.fields.Batch_Size__c.label}"
                                          helpText="{!v.objectDescribe.fields.Batch_Size__c.helpText}"/>
                            <lightning:input aura:id="inputBatchSize"
                                name="inputBatchSize"
                                variant="label-hidden"
                                label="{!v.objectDescribe.fields.Batch_Size__c.label}"
                                value="{!v.record.batchSize}"
                                required="true"
                                type="number"
                                min="1"
                                max="200"
                                messageWhenValueMissing="Batch Size is required."
                                messageWhenRangeUnderflow="Batch Size must be between 1 and 200."
                                messageWhenRangeOverflow="Batch Size must be between 1 and 200."
                                class="slds-var-p-top_x-small"/>

                            <c:slds_label label="{!v.objectDescribe.fields.Named_Credential__c.label}"
                                          helpText="{!v.objectDescribe.fields.Named_Credential__c.helpText}"/>
                            <lightning:combobox aura:id="inputNamedCredential"
                                name="inputNamedCredential"
                                variant="label-hidden"
                                label="{!v.objectDescribe.fields.Named_Credential__c.label}"
                                value="{!v.record.namedCredential}"
                                required="false"
                                options="{!v.targetNamedCredentials}"
                                placeholder="Select a Named Credential"
                                class="slds-var-p-top_x-small"/>

                        </div>
                    </div>

                </div>

            </aura:if>

            <!-- Stage: Choose Source -->

            <aura:if isTrue="{!equals( v.wizardActiveStageIndex, 1 )}">

                <div class="slds-grid slds-var-p-horizontal_medium">

                    <div class="slds-col">
                        <c:slds_section title="Source Information"/>
                    </div>

                </div>

                <div class="slds-grid slds-var-p-horizontal_medium">

                    <div class="slds-col">
                        <div class="slds-form slds-form_stacked">

                            <c:slds_label label="{!v.objectDescribe.fields.Source_Type__c.label}"
                                          helpText="{!v.objectDescribe.fields.Source_Type__c.helpText}"/>
                            <lightning:combobox aura:id="inputSourceType"
                                name="inputSourceType"
                                variant="label-hidden"
                                label="{!v.objectDescribe.fields.Source_Type__c.label}"
                                value="{!v.sourceType}"
                                options="{!v.objectDescribe.fields.Source_Type__c.picklistValues}"
                                placeholder="Select a Source Type"
                                required="true"
                                messageWhenValueMissing="Source Type is required."
                                class="slds-var-p-top_x-small"/>

                            <aura:if isTrue="{!equals( v.sourceType, 'Report' )}">

                                <c:slds_label label="Report Folder"
                                              helpText="Choose a folder that has the report to use as the source records."/>
                                <lightning:combobox aura:id="inputSourceReportFolder"
                                    name="inputSourceReportFolder"
                                    variant="label-hidden"
                                    label="Report Folder"
                                    value="{!v.sourceReportFolderId}"
                                    options="{!v.sourceReportFolders}"
                                    placeholder="Select a Report Folder"
                                    required="true"
                                    messageWhenValueMissing="Report Folder is required."
                                    class="slds-var-p-top_x-small"/>

                                <c:slds_label label="Report (tabular format only)"
                                              helpText="{!v.objectDescribe.fields.Source_Report_ID__c.helpText}"/>
                                <lightning:combobox aura:id="inputSourceReport"
                                    name="inputSourceReport"
                                    variant="label-hidden"
                                    label="Report (tabular format only)"
                                    value="{!v.sourceReportId}"
                                    options="{!v.sourceReports}"
                                    placeholder="Select a Tabular Report"
                                    required="true"
                                    messageWhenValueMissing="Report is required."
                                    class="slds-var-p-top_x-small"/>

                                <c:slds_label label="Report Column - choose a column that uniquely identifies each record in the report"
                                              helpText="{!v.objectDescribe.fields.Source_Report_Column_Name__c.helpText}"/>
                                <lightning:combobox aura:id="inputSourceReportColumn"
                                    name="inputSourceReportColumn"
                                    variant="label-hidden"
                                    label="Report Column - choose a column that uniquely identifies each record in the report"
                                    value="{!v.sourceReportColumnName}"
                                    options="{!v.sourceReportColumns}"
                                    placeholder="Select a Report Column"
                                    required="true"
                                    messageWhenValueMissing="Report Column is required."
                                    class="slds-var-p-top_x-small"/>

                            </aura:if>

                            <aura:if isTrue="{!equals( v.sourceType, 'ListView' )}">

                                <c:slds_label label="Object"
                                              helpText="Choose an object that has the list view to use as the source records."/>
                                <lightning:combobox aura:id="inputSourceListViewSobjectType"
                                    name="inputSourceListViewSobjectType"
                                    variant="label-hidden"
                                    label="Object"
                                    value="{!v.sourceListViewSobjectType}"
                                    options="{!v.sourceListViewSobjectTypes}"
                                    placeholder="Select an Object"
                                    required="true"
                                    messageWhenValueMissing="Object is required."
                                    class="slds-var-p-top_x-small"/>

                                <c:slds_label label="List View"
                                              helpText="{!v.objectDescribe.fields.Source_List_View_ID__c.helpText}"/>
                                <lightning:combobox aura:id="inputSourceListView"
                                    name="inputSourceListView"
                                    variant="label-hidden"
                                    label="List View"
                                    value="{!v.sourceListViewId}"
                                    options="{!v.sourceListViews}"
                                    placeholder="Select a List View"
                                    required="true"
                                    messageWhenValueMissing="List View is required."
                                    class="slds-var-p-top_x-small"/>

                            </aura:if>

                            <aura:if isTrue="{!equals( v.sourceType, 'SOQL' )}">

                                <c:slds_label label="SOQL Query"
                                              helpText="{!v.objectDescribe.fields.Source_SOQL_Query__c.helpText}"/>
                                <lightning:textarea aura:id="inputSourceSoqlQuery"
                                    name="inputSourceSoqlQuery"
                                    variant="label-hidden"
                                    label="{!v.objectDescribe.fields.Source_SOQL_Query__c.label}"
                                    value="{!v.record.sourceSoqlQuery}"
                                    required="true"
                                    onblur="{!c.handleOnBlurInputSourceSoqlQuery}"
                                    maxlength="{!v.objectDescribe.fields.Source_SOQL_Query__c.length}"
                                    messageWhenValueMissing="SOQL Query is required."
                                    messageWhenTooLong="SOQL Query is too long."
                                    class="slds-var-p-top_x-small slds-text-font_monospace"/>

                            </aura:if>

                            <aura:if isTrue="{!equals( v.sourceType, 'Apex' )}">

                                <c:slds_label label="Apex Class"
                                              helpText="{!v.objectDescribe.fields.Source_Apex_Class__c.helpText}"/>
                                <lightning:input aura:id="inputSourceApexClass"
                                    name="inputSourceApexClass"
                                    variant="label-hidden"
                                    label="{!v.objectDescribe.fields.Source_Apex_Class__c.label}"
                                    value="{!v.record.sourceApexClass}"
                                    required="true"
                                    messageWhenValueMissing="Apex Class is required."
                                    class="slds-var-p-top_x-small"/>

                            </aura:if>

                            <aura:if isTrue="{!not(empty(v.sourceTypeURL))}">

                                <div class="slds-form-element">
                                    <div class="slds-form-element__control">
                                        <a href="{!v.sourceTypeURL}" target="_blank" rel="noopener noreferrer">View selected source to confirm fields and filters</a>
                                    </div>
                                </div>

                            </aura:if>

                        </div>
                    </div>

                </div>

            </aura:if>

            <!-- Stage: Choose Action -->

            <aura:if isTrue="{!equals( v.wizardActiveStageIndex, 2 )}">

                <div class="slds-grid slds-var-p-horizontal_medium">

                    <div class="slds-col">
                        <c:slds_section title="Action Information"/>
                    </div>

                </div>

                <div class="slds-grid slds-var-p-horizontal_medium">

                    <div class="slds-col">
                        <div class="slds-form slds-form_stacked">

                            <c:slds_label label="Action Type"
                                          helpText="{!v.objectDescribe.fields.Target_Type__c.helpText}"/>
                            <lightning:combobox aura:id="inputTargetType"
                                name="inputTargetType"
                                variant="label-hidden"
                                label="Action Type"
                                value="{!v.targetType}"
                                options="{!v.objectDescribe.fields.Target_Type__c.picklistValues}"
                                placeholder="Select an Action Type"
                                required="true"
                                messageWhenValueMissing="Action Type is required."
                                class="slds-var-p-top_x-small"/>

                            <aura:if isTrue="{!equals( v.targetType, 'Workflow' )}">

                                <div class="slds-form-element slds-var-p-top_x-small">

                                    <label class="slds-form-element__label">
                                        <abbr title="required" class="slds-required">*</abbr>
                                        Action
                                    </label>

                                    <div class="slds-input" disabled="disabled">
                                        For each source record, all <b>active</b> Workflow Rules will run whose <b>Rule Criteria</b> matches the record.
                                        <br/>
                                        <b>Evaluation Criteria</b>, which normally decides when a rule fires, is ignored because you are explicitly running the rules with Mass Action Scheduler.
                                        <br/>
                                        Learn more with the <a href="https://help.salesforce.com/articleView?id=workflow_rules_define.htm" target="_blank" rel="noopener noreferrer">Set the Criteria for Your Workflow Rule</a> help article.
                                    </div>

                                </div>

                            </aura:if>

                            <aura:if isTrue="{!equals( v.targetType, 'Apex' )}">

                                <c:slds_label label="Apex Type"
                                              helpText="Choose how to invoke the Apex code. Supported types include invocable Apex methods annotated with @InvocableMethod, or anonymous blocks."/>
                                <lightning:combobox aura:id="inputTargetApexType"
                                    name="inputTargetApexType"
                                    variant="label-hidden"
                                    label="Apex Type"
                                    value="{!v.targetApexType}"
                                    options="{!v.targetApexTypes}"
                                    placeholder="Select an Apex Type"
                                    required="true"
                                    messageWhenValueMissing="Apex Type is required."
                                    class="slds-var-p-top_x-small"/>

                                <aura:if isTrue="{!equals( v.targetApexType, 'Anonymous' )}">
                                    <c:slds_label label="Apex Code"
                                                  helpText="{!v.objectDescribe.fields.Target_Apex_Script__c.helpText}"/>
                                    <lightning:textarea aura:id="inputTargetApexScript"
                                        name="inputTargetApexScript"
                                        variant="label-hidden"
                                        label="{!v.objectDescribe.fields.Target_Apex_Script__c.label}"
                                        value="{!v.record.targetApexScript}"
                                        required="true"
                                        onblur="{!c.handleOnBlurInputTargetApexScript}"
                                        maxlength="{!v.objectDescribe.fields.Target_Apex_Script__c.length}"
                                        messageWhenValueMissing="Apex code is required."
                                        messageWhenTooLong="Apex code is too long."
                                        class="slds-var-p-top_x-small slds-text-font_monospace"/>
                                </aura:if>

                            </aura:if>

                            <aura:if isTrue="{!v.targetTypeRequiresSobject}">
                                <c:slds_label label="Object"
                                              helpText="Choose an object that has the custom actions to run on the source records."/>
                                <lightning:combobox aura:id="inputTargetSobjectType"
                                    name="inputTargetSobjectType"
                                    variant="label-hidden"
                                    label="Object"
                                    value="{!v.targetSobjectType}"
                                    options="{!v.targetSobjectTypes}"
                                    placeholder="Select an Object"
                                    required="true"
                                    messageWhenValueMissing="Object is required."
                                    class="slds-var-p-top_x-small"/>
                            </aura:if>

                            <aura:if isTrue="{!v.isValidToRenderTargetInvocableActions}">
                                <c:slds_label label="Action"
                                              helpText="Choose the specific action to run on the source records."/>
                                <lightning:combobox aura:id="inputTargetAction"
                                    name="inputTargetAction"
                                    variant="label-hidden"
                                    label="Action"
                                    value="{!v.targetInvocableAction}"
                                    options="{!v.targetInvocableActions}"
                                    placeholder="Select an Action"
                                    required="true"
                                    messageWhenValueMissing="Action is required."
                                    class="slds-var-p-top_x-small"/>
                            </aura:if>

                        </div>
                    </div>

                </div>

            </aura:if>

            <!-- Stage: Field Mappings -->

            <aura:if isTrue="{!equals( v.wizardActiveStageIndex, 3 )}">

                <div class="slds-grid slds-var-p-horizontal_medium">

                    <div class="slds-col">
                        <c:slds_section title="Field Mappings"/>
                    </div>

                </div>

                <div class="slds-var-p-horizontal_medium">

                    <aura:if isTrue="{!empty(v.targetFieldMappings)}">

                        <p>
                            The selected action type has no fields to map.
                            <br/>
                            You may proceed to schedule this configuration.
                        </p>

                    </aura:if>

                    <aura:if isTrue="{!not(empty(v.targetFieldMappings))}">

                        <table class="slds-table slds-table_bordered">
                            <thead>
                                <tr class="slds-text-title_caps">
                                    <th scope="col">Source Field</th>
                                    <th scope="col">Target Field</th>
                                </tr>
                            </thead>
                            <tbody>
                                <aura:iteration var="targetFieldMapping" items="{!v.targetFieldMappings}" indexVar="index">
                                    <tr>
                                        <td width="50%">

                                            <aura:if isTrue="{!equals( v.sourceFieldsInputType, 'text' )}">

                                                <lightning:input aura:id="inputMappingSourceFieldName"
                                                    name="inputMappingSourceFieldName"
                                                    label="{!targetFieldMapping.targetField.label}"
                                                    variant="label-hidden"
                                                    value="{!targetFieldMapping.sourceFieldName}"
                                                    placeholder="Enter source field name"
                                                    required="{!targetFieldMapping.targetField.required}"/>

                                            </aura:if>

                                            <aura:if isTrue="{!equals( v.sourceFieldsInputType, 'combobox' )}">

                                                <lightning:combobox aura:id="inputMappingSourceFieldName"
                                                    name="inputMappingSourceFieldName"
                                                    label="{!targetFieldMapping.targetField.label}"
                                                    variant="label-hidden"
                                                    value="{!targetFieldMapping.sourceFieldName}"
                                                    options="{!v.sourceFields}"
                                                    placeholder="Select a Field"
                                                    required="{!targetFieldMapping.targetField.required}"/>

                                            </aura:if>

                                        </td>
                                        <td width="50%">

                                            <aura:if isTrue="{!targetFieldMapping.targetField.required}">

                                                <abbr class="slds-required" title="required">*</abbr>

                                                <aura:set attribute="else">

                                                    <span class="slds-var-m-right_xxx-small" style="opacity:0">*</span>

                                                </aura:set>

                                            </aura:if>

                                            <span class="slds-var-m-right_xx-small">{!targetFieldMapping.targetField.label}</span>

                                            <aura:if isTrue="{!not(empty(targetFieldMapping.targetField.description))}">
                                                <lightning:helptext content="{!targetFieldMapping.targetField.description}"/>
                                            </aura:if>

                                        </td>
                                    </tr>
                                </aura:iteration>
                            </tbody>
                        </table>

                    </aura:if>

                </div>

            </aura:if>

            <!-- Stage: Schedule -->

            <aura:if isTrue="{!equals( v.wizardActiveStageIndex, 4 )}">

                <div class="slds-grid slds-var-p-horizontal_medium">

                    <div class="slds-col">
                        <c:slds_section title="Schedule Information"/>
                    </div>

                </div>

                <div class="slds-grid slds-var-p-horizontal_medium">

                    <div class="slds-col">
                        <div class="slds-form slds-form_stacked">

                            <c:slds_label label="{!v.objectDescribe.fields.Schedule_Frequency__c.label}"
                                          helpText="{!v.objectDescribe.fields.Schedule_Frequency__c.helpText}"/>
                            <lightning:radioGroup aura:id="inputScheduleFrequency"
                                name="inputScheduleFrequency"
                                variant="label-hidden"
                                label="{!v.objectDescribe.fields.Schedule_Frequency__c.label}"
                                value="{!v.scheduleSelectionsFrequency}"
                                options="{!v.objectDescribe.fields.Schedule_Frequency__c.picklistValues}"
                                type="button"
                                required="true"
                                messageWhenValueMissing="Schedule Frequency is required."
                                class="slds-var-p-top_x-small label-hidden"/>

                            <!--
                                Unfortunately, the radioGroup component changes the value type to an array,
                                so even though my source value is a single string I need to check both data types
                                or introduce a shadow variable to bind to the radio group and use change events
                                to copy the newly selected value; neither of which I want to do
                                https://org62.lightning.force.com/one/one.app#/sObject/0D50M00003LvvAqSAJ/view
                             -->
                            <aura:if isTrue="{!or( equals( v.scheduleSelectionsFrequency, 'Scheduled' ), and( not( empty( v.scheduleSelectionsFrequency ) ), equals( v.scheduleSelectionsFrequency[0], 'Scheduled' ) ) )}">

                                <div class="slds-var-p-top_medium">

                                    <p>
                                        Select the hours, days of month or weekdays, and months
                                        that you want to schedule the action to run.
                                    </p>

                                    <div class="slds-grid">

                                        <div class="slds-col slds-var-m-vertical_medium">

                                            <c:slds_label label="{!v.objectDescribe.fields.Schedule_HourOfDay__c.label}"
                                                          helpText="{!v.objectDescribe.fields.Schedule_HourOfDay__c.helpText}"/>
                                            <lightning:dualListbox aura:id="inputScheduleHourOfDay"
                                                name="inputScheduleHourOfDay"
                                                variant="label-hidden"
                                                label="{!v.objectDescribe.fields.Schedule_HourOfDay__c.label}"
                                                sourceLabel="Available Options"
                                                selectedLabel="Selected Options"
                                                options="{!v.scheduleOptionsHourOfDay}"
                                                value="{!v.scheduleSelectionsHourOfDay}"
                                                required="true"
                                                onchange="{!c.handleInputListBoxChanged}"/>

                                        </div>

                                    </div>

                                    <div class="slds-grid">

                                        <div class="slds-col slds-var-m-vertical_medium">

                                            <c:slds_label label="{!v.objectDescribe.fields.Schedule_DayOfWeek__c.label}"
                                                          helpText="{!v.objectDescribe.fields.Schedule_DayOfWeek__c.helpText}"/>
                                            <lightning:dualListbox aura:id="inputScheduleWeekday"
                                                name="inputScheduleWeekday"
                                                variant="label-hidden"
                                                label="{!v.objectDescribe.fields.Schedule_DayOfWeek__c.label}"
                                                sourceLabel="Available Options"
                                                selectedLabel="Selected Options"
                                                options="{!v.scheduleOptionsDayOfWeek}"
                                                value="{!v.scheduleSelectionsDayOfWeek}"
                                                onchange="{!c.handleInputListBoxChanged}"/>

                                        </div>

                                    </div>

                                    <div class="slds-grid">

                                        <div class="slds-col slds-var-m-vertical_medium">

                                            <c:slds_label label="{!v.objectDescribe.fields.Schedule_DayOfMonth__c.label}"
                                                          helpText="{!v.objectDescribe.fields.Schedule_DayOfMonth__c.helpText}"/>
                                            <lightning:dualListbox aura:id="inputScheduleDayOfMonth"
                                                name="inputScheduleDayOfMonth"
                                                variant="label-hidden"
                                                label="{!v.objectDescribe.fields.Schedule_DayOfMonth__c.label}"
                                                sourceLabel="Available Options"
                                                selectedLabel="Selected Options"
                                                options="{!v.scheduleOptionsDayOfMonth}"
                                                value="{!v.scheduleSelectionsDayOfMonth}"
                                                onchange="{!c.handleInputListBoxChanged}"/>

                                        </div>

                                    </div>

                                    <div class="slds-grid">

                                        <div class="slds-col slds-var-m-vertical_medium">

                                            <c:slds_label label="{!v.objectDescribe.fields.Schedule_MonthOfYear__c.label}"
                                                          helpText="{!v.objectDescribe.fields.Schedule_MonthOfYear__c.helpText}"/>
                                            <lightning:dualListbox aura:id="inputScheduleMonthOfYear"
                                                name="inputScheduleMonthOfYear"
                                                variant="label-hidden"
                                                label="{!v.objectDescribe.fields.Schedule_MonthOfYear__c.label}"
                                                sourceLabel="Available Options"
                                                selectedLabel="Selected Options"
                                                options="{!v.scheduleOptionsMonthOfYear}"
                                                value="{!v.scheduleSelectionsMonthOfYear}"
                                                required="true"
                                                onchange="{!c.handleInputListBoxChanged}"/>

                                        </div>

                                    </div>

                                </div>

                            </aura:if>

                            <aura:if isTrue="{!or( equals( v.scheduleSelectionsFrequency, 'Custom' ), and( not( empty( v.scheduleSelectionsFrequency ) ), equals( v.scheduleSelectionsFrequency[0], 'Custom' ) ) )}">

                                <div class="slds-var-p-top_medium">

                                    <c:slds_label label="{!v.objectDescribe.fields.Schedule_Cron__c.label}"
                                                  helpText="{!v.objectDescribe.fields.Schedule_Cron__c.helpText}"/>
                                    <lightning:input aura:id="inputScheduleCron"
                                         name="inputScheduleCron"
                                         variant="label-hidden"
                                         label="{!v.objectDescribe.fields.Schedule_Cron__c.label}"
                                         type="text"
                                         value="{!v.record.scheduleCron}"
                                         required="true"/>

                                    <div class="slds-var-m-vertical_small">
                                        Please refer to the <a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_scheduler.htm" target="_blank" rel="noopener noreferrer">Apex Scheduler Developer Documentation</a>
                                        for details on creating a cron expression.
                                    </div>

                                </div>

                            </aura:if>

                        </div>
                    </div>

                </div>

            </aura:if>

            <!-- Navigation Controls -->

            <div class="slds-grid slds-var-p-around_medium slds-var-m-top_medium slds-grid_pull-padded-medium slds-grid_align-center">

                <div class="slds-col slds-var-p-horizontal_medium">
                    <lightning:button aura:id="wizardPreviousButton"
                        label="Previous"
                        title="Previous"
                        variant="neutral"
                        disabled="{!not( greaterthan( v.wizardActiveStageIndex, 0 ) )}"
                        onclick="{!c.handleNavigationButtonClick}"/>
                </div>

                <aura:if isTrue="{!lessthan( v.wizardActiveStageIndex, ( v.wizardStageNames.length - 1 ) )}">

                    <div class="slds-col slds-var-p-horizontal_medium">
                        <lightning:button aura:id="wizardNextButton"
                            label="Next"
                            title="Next"
                            variant="brand"
                            disabled="{!not( lessthan( v.wizardActiveStageIndex, ( v.wizardStageNames.length - 1 ) ) )}"
                            onclick="{!c.handleNavigationButtonClick}"/>
                    </div>

                </aura:if>

                <aura:if isTrue="{!equals( v.wizardActiveStageIndex, ( v.wizardStageNames.length - 1 ) )}">

                    <div class="slds-col slds-var-p-horizontal_medium">
                        <lightning:button aura:id="wizardSaveButton"
                            label="Save"
                            title="Save"
                            variant="brand"
                            onclick="{!c.handleSaveButtonClick}"/>
                    </div>

                </aura:if>

            </div>

            <aura:set attribute="else">

                <lightning:spinner variant="brand" size="large"/>

            </aura:set>

        </aura:if>

    </div>

</aura:component>
<!--
BSD 3-Clause License

Copyright (c) 2017-2023, Doug Ayers, douglascayers.com
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

* Neither the name of the copyright holder nor the names of its
  contributors may be used to endorse or promote products derived from
  this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->